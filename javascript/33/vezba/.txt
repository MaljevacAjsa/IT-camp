8. 캛ekanje u lancu

Napi코i async funkciju delayedMessages koja:
prvo 캜eka 1 sekundu i ispisuje "Prva poruka",
zatim 캜eka jo코 2 sekunde i ispisuje "Druga poruka",
zatim 캜eka jo코 3 sekunde i ispisuje "Tre캖a poruka".
游녤 Testiraj i proveri da li se poruke ispisuju sa pravim pauzama.


9. Dohvatanje komentara

Napi코i async funkciju getComments(postId) koja:
dohva캖a komentare za dati post sa https://jsonplaceholder.typicode.com/comments?postId={postId},
ispisuje u konzoli email svih korisnika koji su ostavili komentar.


10. Kombinovanje vi코e API poziva
Napravi async funkciju getUserWithTodos(userId) koja:
dohvata korisnika sa https://jsonplaceholder.typicode.com/users/{userId},
dohvata sve zadatke (todos) tog korisnika,
vra캖a objekat u formatu:

{
  name: "Ime korisnika",
  todosCount: broj_todos
}


11. Retry mehanizam

Napravi async funkciju fetchWithRetry(url, retries) koja:
poku코ava da dohvati podatke sa zadatog url,
ako fetch padne, ponavlja poziv do retries puta,
ako i dalje ne uspe, baca gre코ku "Fetch nije uspeo".

12. Paralelno preuzimanje vi코e postova

Napi코i async funkciju getMultiplePosts(ids) koja prima niz ID-jeva postova, npr. [1, 2, 3],
koristi Promise.all da paralelno dohvati sve postove,
vra캖a niz postova.
游녤 Testiraj sa [1, 2, 3, 4, 5].


13. Sekvencijalno ispisivanje korisnika

Napravi async funkciju printUserNamesSequential(limit) koja:
dohvata listu korisnika,
za prvih limit korisnika (npr. 3), 캜eka po 1 sekundu pre ispisa svakog imena u konzoli.
游녤 O캜ekivano: ime prvog korisnika posle 1s, drugog posle 2s, tre캖eg posle 3s.


14. Validacija pre fetch-a

Napravi async funkciju getPostSafe(id) koja:
ako id nije broj ili je manji od 1, odmah baca gre코ku "Neispravan ID",
ina캜e poku코ava da dohvati post sa API-ja,
vra캖a naslov posta.